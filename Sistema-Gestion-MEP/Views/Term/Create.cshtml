@model Sistema_Gestion_MEP.Models.Term
@{
    ViewBag.Title = "Nuevo periodo";
}

<style>
    .page-header {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        border-radius: 12px;
        padding: 2rem;
        margin-bottom: 2rem;
        color: white;
        box-shadow: 0 4px 15px rgba(42, 82, 152, 0.2);
    }

        .page-header h3 {
            font-size: 1.8rem;
            font-weight: 600;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .page-header p {
            margin: 0.5rem 0 0 0;
            opacity: 0.95;
            font-size: 0.95rem;
        }

    .breadcrumb-custom {
        background: white;
        padding: 1rem 1.5rem;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
        margin-bottom: 1.5rem;
    }

        .breadcrumb-custom .breadcrumb {
            margin: 0;
            background: transparent;
            padding: 0;
        }

        .breadcrumb-custom .breadcrumb-item a {
            color: #2a5298;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
        }

            .breadcrumb-custom .breadcrumb-item a:hover {
                color: #1e3c72;
            }

        .breadcrumb-custom .breadcrumb-item.active {
            color: #6c757d;
        }

    .form-card {
        background: white;
        border-radius: 12px;
        padding: 2.5rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
        margin-bottom: 2rem;
    }

    .form-section-title {
        font-size: 1.2rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 1.5rem;
        padding-bottom: 0.75rem;
        border-bottom: 2px solid #e0e6ed;
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .form-section-title i {
            color: #2a5298;
            font-size: 1.3rem;
        }

    .form-group-custom {
        margin-bottom: 1.5rem;
    }

    .form-label-custom {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 0.6rem;
        font-size: 0.95rem;
        display: flex;
        align-items: center;
        gap: 8px;
    }

        .form-label-custom i {
            color: #2a5298;
            font-size: 1rem;
        }

    .required-mark {
        color: #dc3545;
        font-weight: 700;
        margin-left: 4px;
    }

    .form-control-custom {
        border: 2px solid #e0e6ed;
        border-radius: 8px;
        padding: 0.75rem 1rem;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        background-color: #f8f9fa;
    }

        .form-control-custom:focus {
            border-color: #2a5298;
            background-color: white;
            box-shadow: 0 0 0 3px rgba(42, 82, 152, 0.1);
            outline: none;
        }

    .form-hint {
        font-size: 0.85rem;
        color: #6c757d;
        margin-top: 0.4rem;
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .form-hint i {
            font-size: 0.9rem;
        }

    .validation-error {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.4rem;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .validation-summary {
        background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);
        border-left: 4px solid #dc3545;
        border-radius: 8px;
        padding: 1rem 1.2rem;
        margin-bottom: 1.5rem;
    }

    .info-box {
        background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
        border-left: 4px solid #1976d2;
        border-radius: 8px;
        padding: 1rem 1.2rem;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: start;
        gap: 12px;
    }

        .info-box i {
            color: #1976d2;
            font-size: 1.3rem;
            margin-top: 2px;
        }

    .info-box-content strong {
        display: block;
        color: #0d47a1;
        margin-bottom: 0.3rem;
    }

    .info-box-content p {
        margin: 0;
        color: #1565c0;
        font-size: 0.9rem;
        line-height: 1.5;
    }

    .form-actions {
        display: flex;
        gap: 1rem;
        margin-top: 2rem;
        padding-top: 2rem;
        border-top: 2px solid #e0e6ed;
    }

    .btn-submit {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        color: white;
        border: none;
        padding: 0.85rem 2rem;
        border-radius: 8px;
        font-weight: 600;
        font-size: 1rem;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(42, 82, 152, 0.3);
        display: flex;
        align-items: center;
        gap: 8px;
    }

        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(42, 82, 152, 0.4);
            color: white;
        }

    .btn-cancel {
        background: white;
        color: #6c757d;
        border: 2px solid #e0e6ed;
        padding: 0.85rem 2rem;
        border-radius: 8px;
        font-weight: 600;
        font-size: 1rem;
        transition: all 0.3s ease;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 8px;
    }

        .btn-cancel:hover {
            background: #f8f9fa;
            border-color: #6c757d;
            color: #495057;
            transform: translateY(-2px);
            text-decoration: none;
        }

    @@media (max-width: 768px) {
        .page-header {
            padding: 1.5rem;
        }

        .form-card {
            padding: 1.5rem;
        }

        .form-actions {
            flex-direction: column;
        }

        .btn-submit,
        .btn-cancel {
            width: 100%;
            justify-content: center;
        }
    }
</style>

<div class="breadcrumb-custom">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index","Home")">
                    <i class="fa-solid fa-house"></i> Inicio
                </a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("List","Term")">
                    <i class="fa-regular fa-calendar-days"></i> Periodos
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">
                <i class="fa-solid fa-plus"></i> Nuevo
            </li>
        </ol>
    </nav>
</div>

<div class="page-header">
    <h3>
        <i class="fa-solid fa-plus"></i>
        Nuevo Periodo Lectivo
    </h3>
    <p>Complete la información para crear un nuevo periodo académico</p>
</div>

<div class="info-box">
    <i class="fa-solid fa-circle-info"></i>
    <div class="info-box-content">
        <strong>Información</strong>
        <p>El orden define la secuencia del periodo dentro del año (1 = primero, 2 = segundo, etc.). Esto ayuda a organizar los periodos cronológicamente.</p>
    </div>
</div>

<div class="form-card">
    @using (Html.BeginForm("Create", "Term", FormMethod.Post, new { @class = "form-term", id = "formTerm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "validation-summary" })

        <div class="form-section-title">
            <i class="fa-solid fa-calendar-days"></i>
            Información del Periodo
        </div>

        <div class="row g-4">
            <div class="col-md-3">
                <div class="form-group-custom">
                    <label class="form-label-custom">
                        <i class="fa-solid fa-calendar"></i>
                        Año
                        <span class="required-mark">*</span>
                    </label>
                    @Html.TextBoxFor(m => m.Year, new
                    {
                        @class = "form-control form-control-custom",
                        type = "number",
                        min = "2000",
                        max = "2100",
                        required = "required",
                        placeholder = DateTime.Now.Year.ToString()
                    })
                    @Html.ValidationMessageFor(m => m.Year, "", new { @class = "validation-error" })
                    <div class="form-hint">
                        <i class="fa-regular fa-lightbulb"></i>
                        Año lectivo (2000-2100)
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group-custom">
                    <label class="form-label-custom">
                        <i class="fa-solid fa-tag"></i>
                        Etiqueta
                        <span class="required-mark">*</span>
                    </label>
                    @Html.TextBoxFor(m => m.Label, new
                    {
                        @class = "form-control form-control-custom",
                        placeholder = "Ej: I Trimestre, Semestre 2",
                        maxlength = "50",
                        required = "required"
                    })
                    @Html.ValidationMessageFor(m => m.Label, "", new { @class = "validation-error" })
                    <div class="form-hint">
                        <i class="fa-regular fa-lightbulb"></i>
                        Nombre descriptivo del periodo
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group-custom">
                    <label class="form-label-custom">
                        <i class="fa-solid fa-arrow-down-1-9"></i>
                        Orden
                        <span class="required-mark">*</span>
                    </label>
                    @Html.TextBoxFor(m => m.OrderInYear, new
                    {
                        @class = "form-control form-control-custom",
                        type = "number",
                        min = "1",
                        max = "4",
                        required = "required",
                        placeholder = "1"
                    })
                    @Html.ValidationMessageFor(m => m.OrderInYear, "", new { @class = "validation-error" })
                    <div class="form-hint">
                        <i class="fa-regular fa-lightbulb"></i>
                        Posición en el año (1-4)
                    </div>
                </div>
            </div>
        </div>

        <div class="form-section-title mt-4">
            <i class="fa-solid fa-calendar-range"></i>
            Fechas del Periodo
        </div>

        <div class="row g-4">
            <div class="col-md-6">
                <div class="form-group-custom">
                    <label class="form-label-custom">
                        <i class="fa-solid fa-calendar-check"></i>
                        Fecha de Inicio
                        <span class="required-mark">*</span>
                    </label>
                    @Html.TextBoxFor(m => m.StartDate, "{0:yyyy-MM-dd}", new
                    {
                        @class = "form-control form-control-custom",
                        type = "date",
                        required = "required",
                        id = "startDate"
                    })
                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "validation-error" })
                    <div class="form-hint">
                        <i class="fa-regular fa-lightbulb"></i>
                        Primer día del periodo lectivo
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group-custom">
                    <label class="form-label-custom">
                        <i class="fa-solid fa-calendar-xmark"></i>
                        Fecha de Fin
                        <span class="required-mark">*</span>
                    </label>
                    @Html.TextBoxFor(m => m.EndDate, "{0:yyyy-MM-dd}", new
                    {
                        @class = "form-control form-control-custom",
                        type = "date",
                        required = "required",
                        id = "endDate"
                    })
                    @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "validation-error" })
                    <div class="form-hint">
                        <i class="fa-regular fa-lightbulb"></i>
                        Último día del periodo lectivo
                    </div>
                </div>
            </div>
        </div>

        <div class="form-actions">
            <button type="submit" class="btn-submit" id="btnSubmit">
                <i class="fa-solid fa-floppy-disk"></i>
                Guardar Periodo
            </button>
            <a href="@Url.Action("List","Term")" class="btn-cancel">
                <i class="fa-solid fa-arrow-left"></i>
                Cancelar
            </a>
        </div>
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            // Validar que fecha fin sea posterior a fecha inicio
            $('#endDate').on('change', function() {
                var startDate = new Date($('#startDate').val());
                var endDate = new Date($(this).val());

                if (startDate && endDate && endDate <= startDate) {
                    alert('La fecha de fin debe ser posterior a la fecha de inicio.');
                    $(this).val('');
                }
            });

            $('#startDate').on('change', function() {
                var startDate = new Date($(this).val());
                var endDate = new Date($('#endDate').val());

                if (startDate && endDate && endDate <= startDate) {
                    alert('La fecha de fin debe ser posterior a la fecha de inicio.');
                    $('#endDate').val('');
                }
            });

            // Animación de carga
            $('#formTerm').on('submit', function(e) {
                var form = $(this);
                if (form.valid()) {
                    $('#btnSubmit').prop('disabled', true).css('opacity', '0.7');
                }
            });

            // Sugerir año actual si está vacío
            var yearInput = $('input[name="Year"]');
            if (!yearInput.val()) {
                yearInput.val(new Date().getFullYear());
            }
        });
    </script>
}